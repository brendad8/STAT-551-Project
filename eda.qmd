---
title: "Exploratory Data Analysis"
author: "Rachel Roggenkemper, Jacob Perez, Brendan Callender"
format: html
editor: visual
code-fold: true
---

# Setup & Data Cleaning

```{r}
#| label: load-packages

library(tidyverse)
```

```{r}
#| label: read-data
#| message: false

cvd <- read_csv(here::here("data", "cvd_data.csv"))
diab <- read_csv(here::here("data", "diabetes_full.csv"))
es_diab <- read_csv(here::here("data", "early_stage_diabetes.csv"))
```

```{r}
#| label: clean-response-vars

cvd <- cvd %>%
  mutate(target = if_else(target == 0, "no heart disease", "heart disease"),
         target = factor(target, levels = c("heart disease", "no heart disease")))

diab <- diab %>%
  mutate(
    target = case_when(
      Diabetes_012 == 0 ~ "no diabetes",
      Diabetes_012 == 1 ~ "diabetes", # prediabetes
      Diabetes_012 == 2 ~ "diabetes"
  ),
    target = factor(target, levels = c("diabetes", "no diabetes"))
  ) %>%
  select(-Diabetes_012)

es_diab <- es_diab %>%
  mutate(target = if_else(class == "Negative", "no diabetes", "diabetes"),
         target = factor(target, levels = c("diabetes", "no diabetes"))) %>%
  select(-class)
```

```{r}
#| label: check-nas-cvd
cvd %>% 
  is.na() %>%
  as.data.frame() %>%
  lapply(FUN = sum) %>%
  as.data.frame()
```

```{r}
#| label: check-nas-diab
diab %>% 
  is.na() %>%
  as.data.frame() %>%
  lapply(FUN = sum) %>%
  as.data.frame()
```

```{r}
#| label: check-nas-diab_es
es_diab %>% 
  is.na() %>%
  as.data.frame() %>%
  lapply(FUN = sum) %>%
  as.data.frame()
```

# Distribution of Response Variables

## Cardiovascular Disease Dataset

```{r}
N <- nrow(cvd)
cvd %>%
  select(target) %>%
  group_by(target) %>%
  summarize(n = n()) %>%
  mutate(prop = n / N)
```

## Early Stage Diabetes

```{r}
N <- nrow(es_diab)
es_diab %>%
  select(target) %>%
  group_by(target) %>%
  summarize(n = n()) %>%
  mutate(prop = n / N)
```

## Diabetes CDC

```{r}
N <- nrow(diab)
diab %>%
  select(target) %>%
  group_by(target) %>%
  summarize(n = n()) %>%
  mutate(prop = n / N)
```

# Exploratory Data Analysis

Cool idea: Attempt to make two models for men and women separately and compare to 1 single model. Men and women have different indicators for certain diseases so doing this could help account for that.

## Cardiovascular Disease

From the plot we see very high values of Serum cholesterol are associated with having heart disease. Also restingelectro = 2 is associated with heart disease compared to other values of resting electro. This trend appears to be the same for both men and women.

```{r}
cvd %>%
  ggplot(aes(x = restingrelectro, y = serumcholestrol, color = target)) +
  geom_jitter() +
  labs(title = "Resting Electro and Serum Cholesterol vs CVD") +
  theme(plot.title.position = "plot") +
  facet_wrap(~gender)
```

From the plot below, we see that larger values of both slope and Number of major vessels are associated with having heart disease. This trend appears to be the same for both men and women.

```{r}
cvd %>%
  ggplot(aes(x = noofmajorvessels, y = slope, color = target)) +
  geom_jitter() +
  labs(title = "Slope and Number of Major Vessels vs CVD") +
  theme(plot.title.position = "plot") + 
  facet_wrap(~gender)
```

From the plot below, Chestpain values of 1,2,3 are more associated with heart disease while chest pain = 0 is more associated with no heart disease. This trend is the same for both men and women.

```{r}
cvd %>%
  ggplot(aes(x = chestpain, fill = target)) +
  geom_histogram(bins = 10, position = "dodge") +
  # theme(legend.position = "none") +
  facet_wrap(~gender) +
  labs(title = "Chest Pain vs CVD by Gender") +
  theme(plot.title.position = "plot")
```

The plot below shows that larger values of Resting BP are associated with higher rates of having heart disease. Max heart rate appears to not have a clear pattern with respect to predicting heart disease. This trend appears to be slightly different for men and women.

```{r}
cvd %>%
  ggplot(aes(x = maxheartrate, y = restingBP, color = target)) +
  geom_point()  +
  labs(title = "Resting BP and Max Heart Rate vs CVD") +
  theme(plot.title.position = "plot") +
  facet_wrap(~gender)
```
